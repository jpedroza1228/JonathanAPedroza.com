{
  "hash": "791c50bd7ed9c2f0c63b71bbf5cbc7b8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Looping Through Parameterized Reports\" \nsubtitle: |\n  With Quarto & Python\nimage: rollercoaster_loop.jpg\ncategories: [Python, Quarto, Pandas, Plotnine, Great Tables, Plotly]\ndate: 2024-12-05\n# jupyter: python3\nexecute:\n  enabled: true\n  warning: false\n  message: false\nparams:\n  slug: python-parameterized-report\n  date: 2024-12-05\n---\n\n![Photo by [Jonny Gios](https://unsplash.com/@supergios?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash) on [Unsplash](https://unsplash.com/photos/green-and-brown-roller-coaster-under-blue-sky-during-daytime-M6sDLz3MCmE?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)](rollercoaster_loop.jpg){fig-alt=\"An image of rollercoaster going through two loops.\" fig-align=\"left\" width=\"6in\"}\n\nI wanted to make a quick post about looping through a parameterized report using Quarto and Python because I could not find much information on this topic using Python. When I was creating this, I came across a wonderful video explaining a more in-depth example of looping through a couple of parameters for Quarto documents in Python (video [here](https://www.youtube.com/watch?v=_kjs_u3Ctt4), Quarto document code [here](https://github.com/KeithGalli/quarto-crash-course/blob/parameterized-reports/parameterized-report.qmd), for loop code [here](https://github.com/KeithGalli/quarto-crash-course/blob/parameterized-reports/generate_all_reports.py)).\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport plotnine as pn\nfrom matplotlib import rcParams\nfrom IPython.display import display, Markdown\nfrom great_tables import GT\nimport plotly.express as px\nfrom palmerpenguins import load_penguins\n```\n:::\n\n\n## Parameter(s)\n\nIn order to prepare a Quarto document to have parameters for individual reports, we need to include a `tags` evaluation option as `#| tags: [parameters]`. I have set up my year parameter for 2007. I usually run the parameterized report to make sure that the report renders correctly. When everything works like it should, I move forward with the for loop to render multiple reports.\n\n\n::: {.cell tags='parameters'}\n\n```{.python .cell-code}\nyear = 2007\n```\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n## Exploratory Data Analysis\n\nBelow I am doing some basic calculations to have for a visualization and a great tables output table. To render reports based on the year's data, I filtered the data as `penguin` so it stratified the plot and table for each year within each parameterized report.\n\n### Finding Number of Years\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nyear\n2009    120\n2008    114\n2007    110\nName: count, dtype: int64\n```\n\n\n:::\n:::\n\n\n### Filtering by Year\n\n\n::: {.cell}\n\n:::\n\n\n### Visualization of Species Characteristics\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=614}\n:::\n:::\n\n\n### Table of Species Characteristics\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"hizczfmxig\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>\n#hizczfmxig table {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n        }\n\n#hizczfmxig thead, tbody, tfoot, tr, td, th { border-style: none; }\n tr { background-color: transparent; }\n#hizczfmxig p { margin: 0; padding: 0; }\n #hizczfmxig .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }\n #hizczfmxig .gt_caption { padding-top: 4px; padding-bottom: 4px; }\n #hizczfmxig .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }\n #hizczfmxig .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }\n #hizczfmxig .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #hizczfmxig .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #hizczfmxig .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #hizczfmxig .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }\n #hizczfmxig .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }\n #hizczfmxig .gt_column_spanner_outer:first-child { padding-left: 0; }\n #hizczfmxig .gt_column_spanner_outer:last-child { padding-right: 0; }\n #hizczfmxig .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; }\n #hizczfmxig .gt_spanner_row { border-bottom-style: hidden; }\n #hizczfmxig .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; }\n #hizczfmxig .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; }\n #hizczfmxig .gt_from_md> :first-child { margin-top: 0; }\n #hizczfmxig .gt_from_md> :last-child { margin-bottom: 0; }\n #hizczfmxig .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; }\n #hizczfmxig .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }\n #hizczfmxig .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }\n #hizczfmxig .gt_row_group_first td { border-top-width: 2px; }\n #hizczfmxig .gt_row_group_first th { border-top-width: 2px; }\n #hizczfmxig .gt_striped { background-color: rgba(128,128,128,0.05); }\n #hizczfmxig .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #hizczfmxig .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n #hizczfmxig .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }\n #hizczfmxig .gt_left { text-align: left; }\n #hizczfmxig .gt_center { text-align: center; }\n #hizczfmxig .gt_right { text-align: right; font-variant-numeric: tabular-nums; }\n #hizczfmxig .gt_font_normal { font-weight: normal; }\n #hizczfmxig .gt_font_bold { font-weight: bold; }\n #hizczfmxig .gt_font_italic { font-style: italic; }\n #hizczfmxig .gt_super { font-size: 65%; }\n #hizczfmxig .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }\n #hizczfmxig .gt_asterisk { font-size: 100%; vertical-align: 0; }\n \n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n<thead>\n\n<tr class=\"gt_col_headings\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"species\">species</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"island\">island</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"sex\">sex</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"bill_length_mm\">bill_length_mm</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"bill_depth_mm\">bill_depth_mm</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"flipper_length_mm\">flipper_length_mm</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"body_mass_g\">body_mass_g</th>\n</tr>\n</thead>\n<tbody class=\"gt_table_body\">\n  <tr>\n    <td class=\"gt_row gt_left\">Adelie</td>\n    <td class=\"gt_row gt_left\">Biscoe</td>\n    <td class=\"gt_row gt_left\">female</td>\n    <td class=\"gt_row gt_right\">37.48</td>\n    <td class=\"gt_row gt_right\">18.58</td>\n    <td class=\"gt_row gt_right\">181.8</td>\n    <td class=\"gt_row gt_right\">3470.0</td>\n  </tr>\n  <tr>\n    <td class=\"gt_row gt_left\">Adelie</td>\n    <td class=\"gt_row gt_left\">Biscoe</td>\n    <td class=\"gt_row gt_left\">male</td>\n    <td class=\"gt_row gt_right\">39.16</td>\n    <td class=\"gt_row gt_right\">18.3</td>\n    <td class=\"gt_row gt_right\">181.6</td>\n    <td class=\"gt_row gt_right\">3770.0</td>\n  </tr>\n  <tr>\n    <td class=\"gt_row gt_left\">Adelie</td>\n    <td class=\"gt_row gt_left\">Dream</td>\n    <td class=\"gt_row gt_left\">female</td>\n    <td class=\"gt_row gt_right\">37.86</td>\n    <td class=\"gt_row gt_right\">17.84</td>\n    <td class=\"gt_row gt_right\">185.0</td>\n    <td class=\"gt_row gt_right\">3269.44</td>\n  </tr>\n  <tr>\n    <td class=\"gt_row gt_left\">Adelie</td>\n    <td class=\"gt_row gt_left\">Dream</td>\n    <td class=\"gt_row gt_left\">male</td>\n    <td class=\"gt_row gt_right\">40.38</td>\n    <td class=\"gt_row gt_right\">19.43</td>\n    <td class=\"gt_row gt_right\">188.6</td>\n    <td class=\"gt_row gt_right\">4102.5</td>\n  </tr>\n  <tr>\n    <td class=\"gt_row gt_left\">Adelie</td>\n    <td class=\"gt_row gt_left\">Torgersen</td>\n    <td class=\"gt_row gt_left\">female</td>\n    <td class=\"gt_row gt_right\">38.28</td>\n    <td class=\"gt_row gt_right\">18.16</td>\n    <td class=\"gt_row gt_right\">187.62</td>\n    <td class=\"gt_row gt_right\">3475.0</td>\n  </tr>\n  <tr>\n    <td class=\"gt_row gt_left\">Adelie</td>\n    <td class=\"gt_row gt_left\">Torgersen</td>\n    <td class=\"gt_row gt_left\">male</td>\n    <td class=\"gt_row gt_right\">39.9</td>\n    <td class=\"gt_row gt_right\">20.49</td>\n    <td class=\"gt_row gt_right\">192.29</td>\n    <td class=\"gt_row gt_right\">4139.29</td>\n  </tr>\n  <tr>\n    <td class=\"gt_row gt_left\">Chinstrap</td>\n    <td class=\"gt_row gt_left\">Dream</td>\n    <td class=\"gt_row gt_left\">female</td>\n    <td class=\"gt_row gt_right\">46.57</td>\n    <td class=\"gt_row gt_right\">17.84</td>\n    <td class=\"gt_row gt_right\">188.69</td>\n    <td class=\"gt_row gt_right\">3569.23</td>\n  </tr>\n  <tr>\n    <td class=\"gt_row gt_left\">Chinstrap</td>\n    <td class=\"gt_row gt_left\">Dream</td>\n    <td class=\"gt_row gt_left\">male</td>\n    <td class=\"gt_row gt_right\">50.88</td>\n    <td class=\"gt_row gt_right\">19.13</td>\n    <td class=\"gt_row gt_right\">196.15</td>\n    <td class=\"gt_row gt_right\">3819.23</td>\n  </tr>\n  <tr>\n    <td class=\"gt_row gt_left\">Gentoo</td>\n    <td class=\"gt_row gt_left\">Biscoe</td>\n    <td class=\"gt_row gt_left\">female</td>\n    <td class=\"gt_row gt_right\">45.06</td>\n    <td class=\"gt_row gt_right\">13.99</td>\n    <td class=\"gt_row gt_right\">211.06</td>\n    <td class=\"gt_row gt_right\">4618.75</td>\n  </tr>\n  <tr>\n    <td class=\"gt_row gt_left\">Gentoo</td>\n    <td class=\"gt_row gt_left\">Biscoe</td>\n    <td class=\"gt_row gt_left\">male</td>\n    <td class=\"gt_row gt_right\">49.0</td>\n    <td class=\"gt_row gt_right\">15.36</td>\n    <td class=\"gt_row gt_right\">218.88</td>\n    <td class=\"gt_row gt_right\">5552.94</td>\n  </tr>\n</tbody>\n\n\n</table>\n\n</div>\n        \n```\n\n:::\n:::\n\n\n## Looping Through Years\n\nTo render the report above, we are going to create a python file (`.py`) to house our for loop for the reports. Rather than link to an additional file, I have the code below of what would be on the .py file. The only package we'll need is the `os` package. Since this is a simple example, I'm going to loop through one parameter (year) and since I already went through the palmerpenguins dataset, I know there are three years of data. For this example, I hard coded the years into a list to loop through, but I could have also used `unique()` functions from pandas or numpy to get the unique values for the years, which would be more beneficial if the data would be updated in the future.\n\nThe for loop then calls for each value in the `year_list` list. I also included the year in the final html file to make it easier to distinguish which report belongs to what data. Then I like to organize the command argument into the separate components of the quarto command with the name of the parameterized report template first followed by the parameter I'm looping over and then the output file name. This should render three reports, one for each year, with the first name being `penguin_report_2007.html`.\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport os\n\n# Define the list of states\n# np.unique(penguins['year'])\n# penguins['year'].unique()\nyear_list = [2007, 2008, 2009]\n\n# Loop through each state and render the Quarto document\nfor i in year_list:\n    output_file = f'penguin_report_{i}.html'\n    command = (\n        f'quarto render index.qmd '\n        f'-P year:\"{i}\" '\n        f'--output \"{output_file}\"'\n    )\n    os.system(command)\n```\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}